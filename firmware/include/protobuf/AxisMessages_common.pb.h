// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: AxisMessages_common.proto
// Protobuf C++ Version: 6.30.2

#ifndef AxisMessages_5fcommon_2eproto_2epb_2eh
#define AxisMessages_5fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_AxisMessages_5fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_AxisMessages_5fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_AxisMessages_5fcommon_2eproto;
}  // extern "C"
namespace AxisDriver {
enum HomeDirection : int;
extern const uint32_t HomeDirection_internal_data_[];
enum LedStates : int;
extern const uint32_t LedStates_internal_data_[];
enum MessageId : int;
extern const uint32_t MessageId_internal_data_[];
enum MotorBrake : int;
extern const uint32_t MotorBrake_internal_data_[];
enum MotorStates : int;
extern const uint32_t MotorStates_internal_data_[];
enum PositionMode : int;
extern const uint32_t PositionMode_internal_data_[];
class Footer;
struct FooterDefaultTypeInternal;
extern FooterDefaultTypeInternal _Footer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Footer_class_data_;
class Header;
struct HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Header_class_data_;
}  // namespace AxisDriver
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::AxisDriver::HomeDirection_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::HomeDirection>;
template <>
internal::EnumTraitsT<::AxisDriver::LedStates_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::LedStates>;
template <>
internal::EnumTraitsT<::AxisDriver::MessageId_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::MessageId>;
template <>
internal::EnumTraitsT<::AxisDriver::MotorBrake_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::MotorBrake>;
template <>
internal::EnumTraitsT<::AxisDriver::MotorStates_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::MotorStates>;
template <>
internal::EnumTraitsT<::AxisDriver::PositionMode_internal_data_>
    internal::EnumTraitsImpl::value<::AxisDriver::PositionMode>;
}  // namespace protobuf
}  // namespace google

namespace AxisDriver {
enum LedStates : int {
  OFF = 0,
  FLASH_ERROR = 1,
  ERROR = 2,
  BOOTUP = 3,
  RAINBOW = 4,
  SOLID = 5,
  MAX_VALUE = 6,
  LedStates_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LedStates_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LedStates_internal_data_[];
inline constexpr LedStates LedStates_MIN =
    static_cast<LedStates>(0);
inline constexpr LedStates LedStates_MAX =
    static_cast<LedStates>(6);
inline bool LedStates_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int LedStates_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LedStates_descriptor();
template <typename T>
const std::string& LedStates_Name(T value) {
  static_assert(std::is_same<T, LedStates>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LedStates_Name().");
  return LedStates_Name(static_cast<LedStates>(value));
}
template <>
inline const std::string& LedStates_Name(LedStates value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LedStates_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool LedStates_Parse(
    absl::string_view name, LedStates* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LedStates>(LedStates_descriptor(), name,
                                           value);
}
enum MotorStates : int {
  MOTOR_OFF = 0,
  POSITION = 1,
  VELOCITY = 2,
  VELOCITY_STEP = 3,
  IDLE_ON = 4,
  HOME = 5,
  MotorStates_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MotorStates_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MotorStates_internal_data_[];
inline constexpr MotorStates MotorStates_MIN =
    static_cast<MotorStates>(0);
inline constexpr MotorStates MotorStates_MAX =
    static_cast<MotorStates>(5);
inline bool MotorStates_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int MotorStates_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MotorStates_descriptor();
template <typename T>
const std::string& MotorStates_Name(T value) {
  static_assert(std::is_same<T, MotorStates>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MotorStates_Name().");
  return MotorStates_Name(static_cast<MotorStates>(value));
}
template <>
inline const std::string& MotorStates_Name(MotorStates value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MotorStates_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool MotorStates_Parse(
    absl::string_view name, MotorStates* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotorStates>(MotorStates_descriptor(), name,
                                           value);
}
enum MotorBrake : int {
  NORMAL = 0,
  FREEWHEELING = 1,
  STRONG_BRAKING = 2,
  BRAKING = 3,
  MotorBrake_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MotorBrake_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MotorBrake_internal_data_[];
inline constexpr MotorBrake MotorBrake_MIN =
    static_cast<MotorBrake>(0);
inline constexpr MotorBrake MotorBrake_MAX =
    static_cast<MotorBrake>(3);
inline bool MotorBrake_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int MotorBrake_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MotorBrake_descriptor();
template <typename T>
const std::string& MotorBrake_Name(T value) {
  static_assert(std::is_same<T, MotorBrake>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MotorBrake_Name().");
  return MotorBrake_Name(static_cast<MotorBrake>(value));
}
template <>
inline const std::string& MotorBrake_Name(MotorBrake value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MotorBrake_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool MotorBrake_Parse(
    absl::string_view name, MotorBrake* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotorBrake>(MotorBrake_descriptor(), name,
                                           value);
}
enum HomeDirection : int {
  CLOCKWISE = 0,
  COUNTERCLOCKWISE = 1,
  HomeDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  HomeDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t HomeDirection_internal_data_[];
inline constexpr HomeDirection HomeDirection_MIN =
    static_cast<HomeDirection>(0);
inline constexpr HomeDirection HomeDirection_MAX =
    static_cast<HomeDirection>(1);
inline bool HomeDirection_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int HomeDirection_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL HomeDirection_descriptor();
template <typename T>
const std::string& HomeDirection_Name(T value) {
  static_assert(std::is_same<T, HomeDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to HomeDirection_Name().");
  return HomeDirection_Name(static_cast<HomeDirection>(value));
}
template <>
inline const std::string& HomeDirection_Name(HomeDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<HomeDirection_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool HomeDirection_Parse(
    absl::string_view name, HomeDirection* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<HomeDirection>(HomeDirection_descriptor(), name,
                                           value);
}
enum PositionMode : int {
  ABSOLUTE = 0,
  RELATIVE = 1,
  PositionMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PositionMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PositionMode_internal_data_[];
inline constexpr PositionMode PositionMode_MIN =
    static_cast<PositionMode>(0);
inline constexpr PositionMode PositionMode_MAX =
    static_cast<PositionMode>(1);
inline bool PositionMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int PositionMode_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PositionMode_descriptor();
template <typename T>
const std::string& PositionMode_Name(T value) {
  static_assert(std::is_same<T, PositionMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PositionMode_Name().");
  return PositionMode_Name(static_cast<PositionMode>(value));
}
template <>
inline const std::string& PositionMode_Name(PositionMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PositionMode_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool PositionMode_Parse(
    absl::string_view name, PositionMode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PositionMode>(PositionMode_descriptor(), name,
                                           value);
}
enum MessageId : int {
  GetVersionId = 0,
  SetI2CAddressId = 1,
  GetI2CAddressId = 2,
  SetEthernetAddressId = 3,
  GetEthernetAddressId = 4,
  SetEthernetPortId = 5,
  GetEthernetPortId = 6,
  GetMacAddressId = 7,
  SaveConfigurationId = 8,
  SetLedStateId = 9,
  GetLedStateId = 10,
  SetLedColorId = 11,
  GetLedColorId = 12,
  SetHomeDirectionId = 13,
  GetHomeDirectionId = 14,
  SetHomeThresholdId = 15,
  GetHomeThresholdId = 16,
  SetHomeSpeedId = 17,
  GetHomeSpeedId = 18,
  GetHomedStateId = 19,
  HomeId = 20,
  SetMotorStateId = 21,
  GetMotorStateId = 22,
  SetMotorBrakeId = 23,
  GetMotorBrakeId = 24,
  SetMaxSpeedId = 25,
  GetMaxSpeedId = 26,
  SetAccelerationId = 27,
  GetAccelerationId = 28,
  SetCurrentPositionId = 29,
  GetCurrentPositionId = 30,
  SetTargetPositionId = 31,
  GetTargetPositionId = 32,
  SetRelativeTargetPositionId = 33,
  SetVelocityId = 34,
  GetVelocityId = 35,
  SetVelocityAndStepsId = 36,
  StartPathId = 37,
  SetHAEnableId = 38,
  GetHAEnableId = 39,
  SetHAModeId = 40,
  GetHAModeId = 41,
  SetHAIpAddressId = 42,
  GetHAIpAddressId = 43,
  SetHAVelocitySwitchOnSpeedId = 44,
  GetHAVelocitySwitchOnSpeedId = 45,
  SetHAVelocitySwitchOffSpeedId = 46,
  GetHAVelocitySwitchOffSpeedId = 47,
  SetHAPositionSwitchOnPositionId = 48,
  GetHAPositionSwitchOnPositionId = 49,
  SetHAPositionSwitchOffPositionId = 50,
  GetHAPositionSwitchOffPositionId = 51,
  SetHAVelocitySliderMinId = 52,
  GetHAVelocitySliderMinId = 53,
  SetHAVelocitySliderMaxId = 54,
  GetHAVelocitySliderMaxId = 55,
  SetHAPositionSliderMinId = 56,
  GetHAPositionSliderMinId = 57,
  SetHAPositionSliderMaxId = 58,
  GetHAPositionSliderMaxId = 59,
  SetHAMqttUserId = 60,
  GetHAMqttUserId = 61,
  SetHAMqttPasswordId = 62,
  GetHAMqttPasswordId = 63,
  SetHAMqttNameId = 64,
  GetHAMqttNameId = 65,
  SetHAMqttIconId = 66,
  GetHAMqttIconId = 67,
  MessageId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MessageId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MessageId_internal_data_[];
inline constexpr MessageId MessageId_MIN =
    static_cast<MessageId>(0);
inline constexpr MessageId MessageId_MAX =
    static_cast<MessageId>(67);
inline bool MessageId_IsValid(int value) {
  return 0 <= value && value <= 67;
}
inline constexpr int MessageId_ARRAYSIZE = 67 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MessageId_descriptor();
template <typename T>
const std::string& MessageId_Name(T value) {
  static_assert(std::is_same<T, MessageId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MessageId_Name().");
  return MessageId_Name(static_cast<MessageId>(value));
}
template <>
inline const std::string& MessageId_Name(MessageId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MessageId_descriptor, 0, 67>(
      static_cast<int>(value));
}
inline bool MessageId_Parse(
    absl::string_view name, MessageId* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageId>(MessageId_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Header final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AxisDriver.Header) */ {
 public:
  inline Header() : Header(nullptr) {}
  ~Header() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Header* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Header));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Header(::google::protobuf::internal::ConstantInitialized);

  inline Header(const Header& from) : Header(nullptr, from) {}
  inline Header(Header&& from) noexcept
      : Header(nullptr, std::move(from)) {}
  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline Header& operator=(Header&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Header& default_instance() {
    return *reinterpret_cast<const Header*>(
        &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Header& a, Header& b) { a.Swap(&b); }
  inline void Swap(Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Header* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Header>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Header& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Header& from) { Header::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Header* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AxisDriver.Header"; }

 protected:
  explicit Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Header& from);
  Header(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Header&& from) noexcept
      : Header(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSyncBytesFieldNumber = 1,
    kMessageTypeFieldNumber = 2,
    kBodySizeFieldNumber = 3,
  };
  // uint32 sync_bytes = 1;
  void clear_sync_bytes() ;
  ::uint32_t sync_bytes() const;
  void set_sync_bytes(::uint32_t value);

  private:
  ::uint32_t _internal_sync_bytes() const;
  void _internal_set_sync_bytes(::uint32_t value);

  public:
  // .AxisDriver.MessageId message_type = 2;
  void clear_message_type() ;
  ::AxisDriver::MessageId message_type() const;
  void set_message_type(::AxisDriver::MessageId value);

  private:
  ::AxisDriver::MessageId _internal_message_type() const;
  void _internal_set_message_type(::AxisDriver::MessageId value);

  public:
  // uint32 body_size = 3;
  void clear_body_size() ;
  ::uint32_t body_size() const;
  void set_body_size(::uint32_t value);

  private:
  ::uint32_t _internal_body_size() const;
  void _internal_set_body_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AxisDriver.Header)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Header& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t sync_bytes_;
    int message_type_;
    ::uint32_t body_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AxisMessages_5fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Header_class_data_;
// -------------------------------------------------------------------

class Footer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AxisDriver.Footer) */ {
 public:
  inline Footer() : Footer(nullptr) {}
  ~Footer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Footer* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Footer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Footer(::google::protobuf::internal::ConstantInitialized);

  inline Footer(const Footer& from) : Footer(nullptr, from) {}
  inline Footer(Footer&& from) noexcept
      : Footer(nullptr, std::move(from)) {}
  inline Footer& operator=(const Footer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Footer& operator=(Footer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Footer& default_instance() {
    return *reinterpret_cast<const Footer*>(
        &_Footer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Footer& a, Footer& b) { a.Swap(&b); }
  inline void Swap(Footer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Footer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Footer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Footer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Footer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Footer& from) { Footer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Footer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AxisDriver.Footer"; }

 protected:
  explicit Footer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Footer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Footer& from);
  Footer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Footer&& from) noexcept
      : Footer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChecksumFieldNumber = 1,
  };
  // uint32 checksum = 1;
  void clear_checksum() ;
  ::uint32_t checksum() const;
  void set_checksum(::uint32_t value);

  private:
  ::uint32_t _internal_checksum() const;
  void _internal_set_checksum(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AxisDriver.Footer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Footer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t checksum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AxisMessages_5fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Footer_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Header

// uint32 sync_bytes = 1;
inline void Header::clear_sync_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_bytes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Header::sync_bytes() const {
  // @@protoc_insertion_point(field_get:AxisDriver.Header.sync_bytes)
  return _internal_sync_bytes();
}
inline void Header::set_sync_bytes(::uint32_t value) {
  _internal_set_sync_bytes(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:AxisDriver.Header.sync_bytes)
}
inline ::uint32_t Header::_internal_sync_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sync_bytes_;
}
inline void Header::_internal_set_sync_bytes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_bytes_ = value;
}

// .AxisDriver.MessageId message_type = 2;
inline void Header::clear_message_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::AxisDriver::MessageId Header::message_type() const {
  // @@protoc_insertion_point(field_get:AxisDriver.Header.message_type)
  return _internal_message_type();
}
inline void Header::set_message_type(::AxisDriver::MessageId value) {
  _internal_set_message_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:AxisDriver.Header.message_type)
}
inline ::AxisDriver::MessageId Header::_internal_message_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::AxisDriver::MessageId>(_impl_.message_type_);
}
inline void Header::_internal_set_message_type(::AxisDriver::MessageId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_type_ = value;
}

// uint32 body_size = 3;
inline void Header::clear_body_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Header::body_size() const {
  // @@protoc_insertion_point(field_get:AxisDriver.Header.body_size)
  return _internal_body_size();
}
inline void Header::set_body_size(::uint32_t value) {
  _internal_set_body_size(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:AxisDriver.Header.body_size)
}
inline ::uint32_t Header::_internal_body_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.body_size_;
}
inline void Header::_internal_set_body_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_size_ = value;
}

// -------------------------------------------------------------------

// Footer

// uint32 checksum = 1;
inline void Footer::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Footer::checksum() const {
  // @@protoc_insertion_point(field_get:AxisDriver.Footer.checksum)
  return _internal_checksum();
}
inline void Footer::set_checksum(::uint32_t value) {
  _internal_set_checksum(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:AxisDriver.Footer.checksum)
}
inline ::uint32_t Footer::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_;
}
inline void Footer::_internal_set_checksum(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace AxisDriver


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::AxisDriver::LedStates> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::LedStates>() {
  return ::AxisDriver::LedStates_descriptor();
}
template <>
struct is_proto_enum<::AxisDriver::MotorStates> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::MotorStates>() {
  return ::AxisDriver::MotorStates_descriptor();
}
template <>
struct is_proto_enum<::AxisDriver::MotorBrake> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::MotorBrake>() {
  return ::AxisDriver::MotorBrake_descriptor();
}
template <>
struct is_proto_enum<::AxisDriver::HomeDirection> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::HomeDirection>() {
  return ::AxisDriver::HomeDirection_descriptor();
}
template <>
struct is_proto_enum<::AxisDriver::PositionMode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::PositionMode>() {
  return ::AxisDriver::PositionMode_descriptor();
}
template <>
struct is_proto_enum<::AxisDriver::MessageId> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::AxisDriver::MessageId>() {
  return ::AxisDriver::MessageId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // AxisMessages_5fcommon_2eproto_2epb_2eh
