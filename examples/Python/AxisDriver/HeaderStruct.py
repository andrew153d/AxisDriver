# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AxisDriver

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HeaderStruct(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # HeaderStruct
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HeaderStruct
    def SyncBytes(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # HeaderStruct
    def MessageType(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # HeaderStruct
    def BodySize(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))

def CreateHeaderStruct(builder, syncBytes, messageType, bodySize):
    builder.Prep(4, 8)
    builder.PrependUint16(bodySize)
    builder.PrependUint16(messageType)
    builder.PrependUint32(syncBytes)
    return builder.Offset()
