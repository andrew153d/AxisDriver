# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AxisDriver

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VelocityAndStepsMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VelocityAndStepsMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsVelocityAndStepsMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # VelocityAndStepsMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VelocityAndStepsMessage
    def Velocity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # VelocityAndStepsMessage
    def Steps(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # VelocityAndStepsMessage
    def PositionMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def VelocityAndStepsMessageStart(builder):
    builder.StartObject(3)

def Start(builder):
    VelocityAndStepsMessageStart(builder)

def VelocityAndStepsMessageAddVelocity(builder, velocity):
    builder.PrependInt32Slot(0, velocity, 0)

def AddVelocity(builder, velocity):
    VelocityAndStepsMessageAddVelocity(builder, velocity)

def VelocityAndStepsMessageAddSteps(builder, steps):
    builder.PrependInt32Slot(1, steps, 0)

def AddSteps(builder, steps):
    VelocityAndStepsMessageAddSteps(builder, steps)

def VelocityAndStepsMessageAddPositionMode(builder, positionMode):
    builder.PrependUint8Slot(2, positionMode, 0)

def AddPositionMode(builder, positionMode):
    VelocityAndStepsMessageAddPositionMode(builder, positionMode)

def VelocityAndStepsMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return VelocityAndStepsMessageEnd(builder)
